//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18
func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func forceEOF(yylex interface{}) {
	yylex.(*Tokenizer).ForceEOF = true
}

//line sql.y:50
type yySymType struct {
	yys               int
	empty             struct{}
	statement         Statement
	selStmt           SelectStatement
	ddl               *DDL
	ins               *Insert
	byt               byte
	bytes             []byte
	bytes2            [][]byte
	str               string
	strs              []string
	selectExprs       SelectExprs
	selectExpr        SelectExpr
	columns           Columns
	colName           *ColName
	tableExprs        TableExprs
	tableExpr         TableExpr
	tableName         TableName
	tableNames        TableNames
	indexHints        *IndexHints
	expr              Expr
	exprs             Exprs
	boolVal           BoolVal
	colTuple          ColTuple
	values            Values
	valTuple          ValTuple
	subquery          *Subquery
	whens             []*When
	when              *When
	orderBy           OrderBy
	order             *Order
	limit             *Limit
	updateExprs       UpdateExprs
	updateExpr        *UpdateExpr
	setExprs          SetExprs
	setExpr           *SetExpr
	colIdent          ColIdent
	colIdents         []ColIdent
	tableIdent        TableIdent
	convertType       *ConvertType
	aliasedTableName  *AliasedTableExpr
	TableSpec         *TableSpec
	TableOptions      TableOptions
	columnType        ColumnType
	colKeyOpt         ColumnKeyOption
	optVal            *SQLVal
	LengthScaleOption LengthScaleOption
	columnDefinition  *ColumnDefinition
	indexDefinition   *IndexDefinition
	indexInfo         *IndexInfo
	indexColumn       *IndexColumn
	indexColumns      []*IndexColumn
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const INSERT = 57349
const UPDATE = 57350
const DELETE = 57351
const FROM = 57352
const WHERE = 57353
const GROUP = 57354
const HAVING = 57355
const ORDER = 57356
const BY = 57357
const LIMIT = 57358
const OFFSET = 57359
const FOR = 57360
const ALL = 57361
const DISTINCT = 57362
const AS = 57363
const EXISTS = 57364
const ASC = 57365
const DESC = 57366
const INTO = 57367
const DUPLICATE = 57368
const KEY = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const FULL = 57373
const CHECKSUM = 57374
const FULLTEXT = 57375
const PARSER = 57376
const NGRAM = 57377
const VALUES = 57378
const LAST_INSERT_ID = 57379
const NEXT = 57380
const VALUE = 57381
const SHARE = 57382
const MODE = 57383
const SQL_NO_CACHE = 57384
const SQL_CACHE = 57385
const JOIN = 57386
const STRAIGHT_JOIN = 57387
const LEFT = 57388
const RIGHT = 57389
const INNER = 57390
const OUTER = 57391
const CROSS = 57392
const NATURAL = 57393
const USE = 57394
const FORCE = 57395
const ON = 57396
const ID = 57397
const HEX = 57398
const STRING = 57399
const INTEGRAL = 57400
const FLOAT = 57401
const HEXNUM = 57402
const VALUE_ARG = 57403
const LIST_ARG = 57404
const COMMENT = 57405
const COMMENT_KEYWORD = 57406
const NULL = 57407
const TRUE = 57408
const FALSE = 57409
const OFF = 57410
const OR = 57411
const AND = 57412
const NOT = 57413
const BETWEEN = 57414
const CASE = 57415
const WHEN = 57416
const THEN = 57417
const ELSE = 57418
const END = 57419
const LE = 57420
const GE = 57421
const NE = 57422
const NULL_SAFE_EQUAL = 57423
const IS = 57424
const LIKE = 57425
const REGEXP = 57426
const IN = 57427
const SHIFT_LEFT = 57428
const SHIFT_RIGHT = 57429
const DIV = 57430
const MOD = 57431
const UNARY = 57432
const COLLATE = 57433
const BINARY = 57434
const INTERVAL = 57435
const JSON_EXTRACT_OP = 57436
const JSON_UNQUOTE_EXTRACT_OP = 57437
const CREATE = 57438
const ALTER = 57439
const DROP = 57440
const RENAME = 57441
const ANALYZE = 57442
const ADD = 57443
const MODIFY = 57444
const TABLE = 57445
const INDEX = 57446
const VIEW = 57447
const TO = 57448
const IGNORE = 57449
const IF = 57450
const UNIQUE = 57451
const USING = 57452
const PRIMARY = 57453
const COLUMN = 57454
const SHOW = 57455
const DESCRIBE = 57456
const EXPLAIN = 57457
const DATE = 57458
const ESCAPE = 57459
const REPAIR = 57460
const OPTIMIZE = 57461
const TRUNCATE = 57462
const BIT = 57463
const TINYINT = 57464
const SMALLINT = 57465
const MEDIUMINT = 57466
const INT = 57467
const INTEGER = 57468
const BIGINT = 57469
const INTNUM = 57470
const REAL = 57471
const DOUBLE = 57472
const FLOAT_TYPE = 57473
const DECIMAL = 57474
const NUMERIC = 57475
const TIME = 57476
const TIMESTAMP = 57477
const DATETIME = 57478
const YEAR = 57479
const CHAR = 57480
const VARCHAR = 57481
const BOOL = 57482
const CHARACTER = 57483
const VARBINARY = 57484
const NCHAR = 57485
const CHARSET = 57486
const TEXT = 57487
const TINYTEXT = 57488
const MEDIUMTEXT = 57489
const LONGTEXT = 57490
const BLOB = 57491
const TINYBLOB = 57492
const MEDIUMBLOB = 57493
const LONGBLOB = 57494
const JSON = 57495
const ENUM = 57496
const NULLX = 57497
const AUTO_INCREMENT = 57498
const APPROXNUM = 57499
const SIGNED = 57500
const UNSIGNED = 57501
const ZEROFILL = 57502
const DATABASES = 57503
const TABLES = 57504
const VITESS_KEYSPACES = 57505
const VITESS_SHARDS = 57506
const VSCHEMA_TABLES = 57507
const WARNINGS = 57508
const VARIABLES = 57509
const EVENTS = 57510
const BINLOG = 57511
const GTID = 57512
const STATUS = 57513
const COLUMNS = 57514
const CURRENT_TIMESTAMP = 57515
const DATABASE = 57516
const CURRENT_DATE = 57517
const CURRENT_TIME = 57518
const LOCALTIME = 57519
const LOCALTIMESTAMP = 57520
const UTC_DATE = 57521
const UTC_TIME = 57522
const UTC_TIMESTAMP = 57523
const REPLACE = 57524
const CONVERT = 57525
const CAST = 57526
const GROUP_CONCAT = 57527
const SEPARATOR = 57528
const MATCH = 57529
const AGAINST = 57530
const BOOLEAN = 57531
const LANGUAGE = 57532
const WITH = 57533
const QUERY = 57534
const EXPANSION = 57535
const UNUSED = 57536
const PARTITION = 57537
const PARTITIONS = 57538
const HASH = 57539
const XA = 57540
const DISTRIBUTED = 57541
const ENGINES = 57542
const VERSIONS = 57543
const PROCESSLIST = 57544
const QUERYZ = 57545
const TXNZ = 57546
const KILL = 57547
const ENGINE = 57548
const SINGLE = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const GLOBAL = 57555
const SESSION = 57556
const NAMES = 57557
const RADON = 57558
const ATTACH = 57559
const ATTACHLIST = 57560
const DETACH = 57561
const RESHARD = 57562

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"FULL",
	"CHECKSUM",
	"FULLTEXT",
	"PARSER",
	"NGRAM",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"USING",
	"PRIMARY",
	"COLUMN",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"CHARSET",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"DATABASES",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VSCHEMA_TABLES",
	"WARNINGS",
	"VARIABLES",
	"EVENTS",
	"BINLOG",
	"GTID",
	"STATUS",
	"COLUMNS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"GROUP_CONCAT",
	"SEPARATOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"PARTITION",
	"PARTITIONS",
	"HASH",
	"XA",
	"DISTRIBUTED",
	"ENGINES",
	"VERSIONS",
	"PROCESSLIST",
	"QUERYZ",
	"TXNZ",
	"KILL",
	"ENGINE",
	"SINGLE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"GLOBAL",
	"SESSION",
	"NAMES",
	"RADON",
	"ATTACH",
	"ATTACHLIST",
	"DETACH",
	"RESHARD",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 27,
	-2, 4,
	-1, 293,
	82, 607,
	-2, 40,
	-1, 298,
	82, 502,
	-2, 453,
	-1, 401,
	110, 489,
	-2, 485,
	-1, 402,
	110, 490,
	-2, 486,
	-1, 584,
	5, 27,
	-2, 429,
	-1, 723,
	110, 492,
	-2, 488,
	-1, 834,
	5, 28,
	-2, 308,
	-1, 858,
	5, 28,
	-2, 430,
	-1, 946,
	5, 27,
	-2, 432,
	-1, 1053,
	5, 28,
	-2, 433,
}

const yyNprod = 660
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 7799

var yyAct = [...]int{

	402, 490, 1087, 990, 587, 895, 357, 874, 1004, 355,
	752, 753, 1001, 294, 377, 937, 916, 595, 707, 936,
	297, 544, 3, 639, 827, 714, 272, 722, 66, 379,
	749, 74, 819, 588, 716, 733, 158, 717, 254, 684,
	493, 611, 626, 255, 344, 72, 410, 404, 281, 479,
	289, 55, 635, 56, 353, 291, 157, 263, 265, 264,
	266, 620, 656, 260, 254, 605, 74, 601, 955, 380,
	50, 60, 271, 309, 954, 306, 655, 1099, 1086, 307,
	296, 257, 1098, 256, 1078, 259, 1096, 261, 262, 1014,
	267, 268, 269, 270, 1085, 599, 1077, 62, 63, 64,
	65, 929, 984, 880, 881, 882, 658, 141, 142, 326,
	1020, 883, 332, 668, 330, 654, 324, 781, 619, 962,
	50, 769, 956, 1026, 901, 627, 979, 977, 277, 316,
	804, 1018, 719, 511, 510, 520, 521, 513, 514, 515,
	516, 517, 518, 519, 512, 254, 254, 522, 803, 317,
	802, 312, 555, 837, 1048, 1050, 495, 140, 801, 614,
	1072, 614, 651, 649, 645, 1071, 648, 650, 1070, 499,
	498, 313, 315, 251, 820, 495, 342, 145, 143, 144,
	327, 799, 534, 535, 1011, 969, 500, 861, 833, 831,
	322, 762, 774, 543, 417, 328, 329, 600, 331, 522,
	888, 497, 917, 500, 1013, 871, 653, 1062, 511, 510,
	520, 521, 513, 514, 515, 516, 517, 518, 519, 512,
	691, 652, 522, 627, 838, 512, 1049, 919, 522, 258,
	1019, 614, 1017, 884, 689, 690, 688, 612, 800, 499,
	498, 498, 770, 921, 761, 925, 933, 920, 647, 918,
	889, 1076, 254, 613, 923, 613, 500, 500, 494, 657,
	421, 931, 310, 502, 922, 734, 734, 254, 844, 924,
	926, 646, 469, 319, 779, 798, 1058, 494, 513, 514,
	515, 516, 517, 518, 519, 512, 254, 311, 522, 254,
	53, 74, 412, 337, 339, 966, 74, 499, 498, 407,
	687, 334, 501, 965, 336, 296, 570, 571, 957, 340,
	423, 793, 254, 139, 500, 254, 254, 254, 499, 498,
	254, 792, 782, 1063, 254, 613, 254, 254, 254, 406,
	610, 335, 609, 338, 338, 500, 677, 679, 680, 1074,
	906, 420, 678, 616, 708, 839, 709, 50, 1029, 617,
	408, 1055, 812, 813, 814, 499, 498, 964, 314, 532,
	511, 510, 520, 521, 513, 514, 515, 516, 517, 518,
	519, 512, 500, 808, 522, 791, 285, 487, 22, 488,
	1023, 489, 486, 492, 511, 510, 520, 521, 513, 514,
	515, 516, 517, 518, 519, 512, 499, 498, 522, 310,
	515, 516, 517, 518, 519, 512, 347, 405, 522, 903,
	74, 1093, 343, 500, 900, 254, 988, 343, 254, 877,
	74, 531, 533, 876, 576, 872, 589, 959, 958, 825,
	343, 590, 867, 572, 296, 584, 775, 276, 594, 369,
	368, 370, 371, 372, 373, 592, 767, 542, 374, 765,
	545, 546, 547, 548, 549, 550, 551, 574, 554, 556,
	556, 556, 556, 556, 556, 556, 556, 564, 565, 566,
	567, 491, 894, 893, 343, 597, 710, 254, 891, 890,
	24, 254, 503, 585, 470, 628, 629, 630, 860, 343,
	1022, 641, 670, 343, 254, 430, 429, 662, 602, 622,
	623, 624, 625, 582, 606, 318, 1021, 885, 57, 670,
	583, 667, 686, 491, 632, 633, 634, 637, 638, 750,
	553, 760, 661, 596, 760, 664, 665, 666, 856, 53,
	669, 988, 580, 892, 825, 685, 659, 419, 568, 24,
	53, 621, 74, 557, 558, 559, 560, 561, 562, 563,
	825, 640, 67, 771, 598, 74, 713, 721, 296, 992,
	995, 996, 997, 993, 723, 994, 998, 725, 760, 735,
	510, 520, 521, 513, 514, 515, 516, 517, 518, 519,
	512, 726, 727, 522, 573, 730, 74, 751, 53, 711,
	712, 738, 589, 636, 631, 853, 278, 590, 731, 737,
	758, 739, 740, 50, 1066, 759, 879, 756, 750, 643,
	476, 1069, 1068, 754, 748, 545, 741, 742, 520, 521,
	513, 514, 515, 516, 517, 518, 519, 512, 24, 1091,
	522, 674, 675, 1038, 681, 682, 992, 995, 996, 997,
	993, 825, 994, 998, 254, 53, 1067, 1037, 673, 763,
	1084, 1041, 773, 755, 776, 50, 1042, 1039, 945, 811,
	254, 1043, 1040, 996, 997, 783, 784, 671, 282, 283,
	747, 766, 411, 746, 1073, 1056, 967, 53, 491, 345,
	786, 728, 729, 426, 416, 870, 796, 778, 795, 1060,
	409, 346, 1059, 943, 772, 686, 854, 642, 475, 1000,
	411, 405, 279, 280, 745, 273, 806, 1032, 428, 1031,
	427, 807, 744, 274, 57, 350, 810, 987, 685, 596,
	74, 724, 785, 480, 787, 788, 789, 485, 815, 764,
	325, 821, 323, 736, 829, 288, 1008, 963, 496, 59,
	61, 54, 1, 873, 254, 608, 603, 308, 607, 790,
	824, 511, 510, 520, 521, 513, 514, 515, 516, 517,
	518, 519, 512, 1016, 961, 522, 841, 615, 843, 780,
	589, 618, 74, 953, 768, 590, 865, 296, 604, 869,
	1057, 878, 855, 723, 777, 433, 875, 434, 432, 436,
	866, 832, 435, 431, 863, 74, 146, 254, 290, 999,
	1003, 378, 826, 809, 69, 797, 644, 530, 897, 296,
	743, 295, 422, 862, 757, 569, 403, 1030, 986, 842,
	552, 732, 356, 676, 367, 364, 366, 365, 575, 74,
	581, 902, 504, 354, 74, 348, 1047, 939, 473, 252,
	413, 899, 991, 829, 989, 721, 296, 915, 296, 905,
	938, 852, 723, 911, 254, 484, 928, 927, 914, 913,
	940, 74, 74, 910, 896, 287, 935, 845, 944, 74,
	934, 983, 1061, 579, 952, 948, 949, 25, 904, 886,
	887, 946, 897, 296, 58, 284, 754, 822, 491, 950,
	14, 823, 21, 15, 864, 930, 13, 12, 29, 10,
	9, 8, 834, 835, 836, 7, 6, 840, 5, 4,
	275, 23, 846, 2, 847, 848, 849, 850, 20, 19,
	18, 17, 16, 941, 11, 0, 755, 0, 0, 947,
	0, 0, 857, 858, 859, 0, 0, 960, 896, 0,
	0, 0, 254, 254, 868, 975, 287, 287, 940, 0,
	0, 0, 74, 0, 0, 0, 1009, 1012, 0, 0,
	74, 0, 0, 0, 0, 897, 296, 1015, 0, 1010,
	74, 0, 0, 0, 875, 754, 0, 932, 0, 972,
	973, 0, 974, 915, 296, 976, 0, 978, 942, 254,
	254, 254, 254, 0, 0, 940, 940, 940, 940, 982,
	254, 909, 1044, 254, 0, 1034, 254, 1036, 1033, 940,
	1035, 1002, 74, 1052, 1051, 755, 1025, 50, 589, 0,
	0, 896, 0, 590, 725, 0, 1054, 0, 0, 0,
	0, 0, 0, 0, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 951, 0, 0, 0, 0, 0,
	0, 0, 286, 287, 0, 0, 0, 0, 941, 941,
	941, 941, 0, 0, 0, 0, 985, 0, 287, 0,
	0, 0, 1002, 0, 536, 537, 538, 539, 540, 541,
	0, 0, 74, 74, 74, 1089, 1090, 287, 0, 0,
	287, 970, 0, 971, 74, 0, 1088, 1088, 1088, 0,
	0, 0, 0, 0, 980, 981, 0, 0, 1097, 0,
	0, 0, 0, 468, 0, 0, 287, 287, 287, 0,
	0, 477, 0, 0, 0, 287, 0, 287, 287, 287,
	0, 0, 0, 320, 321, 0, 0, 0, 0, 0,
	1081, 1082, 1083, 0, 0, 0, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1028, 0, 0, 0, 1064, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 451, 0, 0, 1046, 0,
	456, 457, 458, 459, 460, 461, 462, 1053, 463, 464,
	465, 466, 467, 452, 453, 454, 455, 437, 438, 1079,
	1080, 440, 0, 0, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 0, 287, 0, 591, 593,
	683, 0, 0, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 1075, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 1092, 0, 1094, 1095, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 418, 287, 0,
	0, 0, 287, 0, 24, 51, 26, 27, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 46, 471, 472, 474, 0, 28, 0, 0,
	36, 0, 478, 0, 481, 482, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	37, 0, 0, 53, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 593, 0, 0, 720, 720,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 720, 720, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 591, 0, 0, 0, 0, 0,
	0, 30, 31, 32, 0, 34, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 816, 817, 818, 35, 47,
	39, 0, 0, 48, 49, 33, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 509, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 287, 507, 508, 505, 511,
	510, 520, 521, 513, 514, 515, 516, 517, 518, 519,
	512, 287, 0, 522, 0, 660, 0, 0, 0, 663,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 38, 0, 0, 0, 0, 0, 0,
	40, 0, 0, 41, 42, 0, 44, 43, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 0, 0, 907, 908, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 591, 0, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 968, 0, 0, 0, 0, 720, 0, 0,
	0, 0, 794, 593, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 805, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 1006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 0, 0, 0, 0,
	287, 287, 287, 287, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 287, 0, 0, 1006, 0, 0,
	591, 239, 230, 201, 241, 178, 193, 250, 194, 195,
	222, 165, 209, 106, 191, 0, 181, 160, 188, 161,
	179, 203, 86, 206, 177, 232, 212, 148, 0, 91,
	0, 0, 247, 97, 216, 0, 112, 103, 0, 0,
	205, 234, 207, 229, 200, 223, 171, 215, 242, 192,
	220, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 218, 237, 190, 219, 221, 159,
	217, 0, 163, 166, 249, 235, 184, 185, 0, 0,
	0, 0, 0, 0, 0, 204, 208, 226, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 214,
	0, 0, 0, 169, 164, 202, 0, 0, 0, 150,
	0, 183, 227, 0, 0, 0, 155, 199, 127, 236,
	197, 196, 240, 243, 108, 0, 233, 180, 189, 82,
	187, 111, 107, 122, 77, 120, 114, 101, 93, 94,
	76, 0, 110, 85, 90, 84, 105, 117, 118, 83,
	132, 80, 126, 79, 167, 125, 104, 168, 116, 121,
	102, 99, 78, 119, 100, 98, 95, 87, 0, 162,
	0, 113, 123, 133, 176, 147, 128, 129, 130, 151,
	152, 0, 153, 0, 154, 149, 174, 175, 172, 173,
	210, 211, 244, 245, 246, 228, 170, 0, 0, 231,
	213, 75, 0, 96, 131, 109, 89, 124, 0, 0,
	0, 0, 0, 186, 248, 225, 224, 238, 0, 88,
	115, 0, 0, 0, 0, 0, 92, 0, 0, 134,
	135, 137, 136, 138, 239, 230, 201, 241, 178, 193,
	250, 194, 195, 222, 165, 209, 106, 191, 0, 181,
	160, 188, 161, 179, 203, 86, 206, 177, 232, 212,
	303, 0, 91, 0, 0, 247, 97, 216, 0, 112,
	103, 0, 0, 205, 234, 207, 229, 200, 223, 171,
	215, 242, 192, 220, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 218, 237, 190,
	219, 221, 159, 217, 0, 163, 166, 249, 235, 184,
	185, 0, 0, 0, 0, 0, 0, 0, 204, 208,
	226, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 214, 0, 0, 0, 169, 164, 202, 0,
	0, 0, 302, 0, 183, 227, 0, 0, 0, 304,
	199, 127, 236, 197, 196, 240, 243, 108, 0, 233,
	180, 189, 82, 187, 111, 107, 122, 77, 120, 114,
	101, 93, 94, 76, 0, 110, 85, 90, 84, 105,
	117, 118, 83, 132, 80, 126, 79, 299, 125, 104,
	298, 116, 121, 102, 99, 78, 119, 100, 98, 95,
	87, 0, 162, 0, 113, 123, 133, 176, 305, 128,
	129, 130, 0, 0, 0, 0, 0, 0, 301, 174,
	175, 172, 173, 210, 211, 244, 245, 246, 228, 170,
	0, 0, 231, 213, 75, 0, 96, 131, 109, 89,
	124, 0, 0, 0, 0, 0, 186, 248, 225, 224,
	238, 0, 88, 115, 0, 0, 0, 0, 0, 293,
	292, 300, 134, 135, 137, 136, 138, 239, 230, 201,
	241, 178, 193, 250, 194, 195, 222, 165, 209, 106,
	191, 0, 181, 160, 188, 161, 179, 203, 86, 206,
	177, 232, 212, 303, 0, 91, 0, 0, 247, 97,
	216, 0, 112, 103, 0, 0, 205, 234, 207, 229,
	200, 223, 171, 215, 242, 192, 220, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	218, 237, 190, 219, 221, 159, 217, 0, 163, 166,
	249, 235, 184, 185, 0, 0, 0, 0, 0, 0,
	0, 204, 208, 226, 198, 0, 0, 0, 0, 0,
	0, 1024, 0, 182, 0, 214, 0, 0, 0, 169,
	164, 202, 0, 0, 0, 302, 0, 183, 227, 0,
	0, 0, 304, 199, 127, 236, 197, 196, 240, 243,
	108, 0, 233, 180, 189, 82, 187, 111, 107, 122,
	77, 120, 114, 101, 93, 94, 76, 0, 110, 85,
	90, 84, 105, 117, 118, 83, 132, 80, 126, 79,
	167, 125, 104, 168, 116, 121, 102, 99, 78, 119,
	100, 98, 95, 87, 0, 162, 0, 113, 123, 133,
	176, 305, 128, 129, 130, 0, 0, 0, 0, 0,
	0, 301, 174, 175, 172, 173, 210, 211, 244, 245,
	246, 228, 170, 0, 0, 231, 213, 75, 0, 96,
	131, 109, 89, 124, 0, 0, 0, 0, 0, 186,
	248, 225, 224, 238, 0, 88, 115, 0, 0, 0,
	0, 0, 92, 0, 0, 134, 135, 137, 136, 138,
	239, 230, 201, 241, 178, 193, 250, 194, 195, 222,
	165, 209, 106, 191, 0, 181, 160, 188, 161, 179,
	203, 86, 206, 177, 232, 212, 303, 0, 91, 0,
	0, 247, 97, 216, 0, 112, 103, 0, 0, 205,
	234, 207, 229, 200, 223, 171, 215, 242, 192, 220,
	53, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 218, 237, 190, 219, 221, 159, 217,
	0, 163, 166, 249, 235, 184, 185, 0, 0, 0,
	0, 0, 0, 0, 204, 208, 226, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 214, 0,
	0, 0, 169, 164, 202, 0, 0, 0, 302, 0,
	183, 227, 0, 0, 0, 304, 199, 127, 236, 197,
	196, 240, 243, 108, 0, 233, 180, 189, 82, 187,
	111, 107, 122, 77, 120, 114, 101, 93, 94, 76,
	0, 110, 85, 90, 84, 105, 117, 118, 83, 132,
	80, 126, 79, 167, 125, 104, 168, 116, 121, 102,
	99, 78, 119, 100, 98, 95, 87, 0, 162, 0,
	113, 123, 133, 176, 305, 128, 129, 130, 0, 0,
	0, 0, 0, 0, 301, 174, 175, 172, 173, 210,
	211, 244, 245, 246, 228, 170, 0, 0, 231, 213,
	75, 0, 96, 131, 109, 89, 124, 0, 0, 0,
	0, 0, 186, 248, 225, 224, 238, 0, 88, 115,
	0, 0, 0, 0, 0, 92, 0, 0, 134, 135,
	137, 136, 138, 239, 230, 201, 241, 178, 193, 250,
	194, 195, 222, 165, 209, 106, 191, 0, 181, 160,
	188, 161, 179, 203, 86, 206, 177, 232, 212, 303,
	0, 91, 0, 0, 247, 97, 216, 0, 112, 103,
	0, 0, 205, 234, 207, 229, 200, 223, 171, 215,
	242, 192, 220, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 218, 237, 190, 219,
	221, 159, 217, 0, 163, 166, 249, 235, 184, 185,
	0, 0, 0, 0, 0, 0, 0, 204, 208, 226,
	198, 0, 0, 0, 0, 0, 0, 912, 0, 182,
	0, 214, 0, 0, 0, 169, 164, 202, 0, 0,
	0, 302, 0, 183, 227, 0, 0, 0, 304, 199,
	127, 236, 197, 196, 240, 243, 108, 0, 233, 180,
	189, 82, 187, 111, 107, 122, 77, 120, 114, 101,
	93, 94, 76, 0, 110, 85, 90, 84, 105, 117,
	118, 83, 132, 80, 126, 79, 167, 125, 104, 168,
	116, 121, 102, 99, 78, 119, 100, 98, 95, 87,
	0, 162, 0, 113, 123, 133, 176, 305, 128, 129,
	130, 0, 0, 0, 0, 0, 0, 301, 174, 175,
	172, 173, 210, 211, 244, 245, 246, 228, 170, 0,
	0, 231, 213, 75, 0, 96, 131, 109, 89, 124,
	0, 0, 0, 0, 0, 186, 248, 225, 224, 238,
	0, 88, 115, 0, 0, 0, 0, 0, 92, 0,
	0, 134, 135, 137, 136, 138, 239, 230, 201, 241,
	178, 193, 250, 194, 195, 222, 165, 209, 106, 191,
	0, 181, 160, 188, 161, 179, 203, 86, 206, 177,
	232, 212, 303, 0, 91, 0, 0, 247, 97, 216,
	0, 112, 103, 0, 0, 205, 234, 207, 229, 200,
	223, 171, 215, 242, 192, 220, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 218,
	237, 190, 219, 221, 159, 217, 0, 163, 166, 249,
	235, 184, 185, 0, 0, 0, 0, 0, 0, 0,
	204, 208, 226, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 214, 0, 0, 0, 169, 164,
	202, 0, 0, 0, 302, 0, 183, 227, 0, 0,
	0, 304, 199, 127, 236, 197, 196, 240, 243, 108,
	0, 233, 180, 189, 82, 187, 111, 107, 122, 77,
	120, 114, 101, 93, 94, 76, 0, 110, 85, 90,
	84, 105, 117, 118, 83, 132, 80, 126, 79, 299,
	125, 104, 298, 116, 121, 102, 99, 78, 119, 100,
	98, 95, 87, 0, 162, 0, 113, 123, 133, 176,
	305, 128, 129, 130, 0, 0, 0, 0, 0, 0,
	301, 174, 175, 172, 173, 210, 211, 244, 245, 246,
	228, 170, 0, 0, 231, 213, 75, 0, 96, 131,
	109, 89, 124, 0, 0, 0, 0, 0, 186, 248,
	225, 224, 238, 0, 88, 115, 0, 0, 0, 0,
	0, 92, 0, 300, 134, 135, 137, 136, 138, 239,
	230, 201, 241, 178, 193, 250, 194, 195, 222, 165,
	209, 106, 191, 0, 181, 160, 188, 161, 179, 203,
	86, 206, 177, 232, 212, 303, 0, 91, 0, 0,
	247, 97, 216, 0, 112, 103, 0, 0, 205, 234,
	207, 229, 200, 223, 171, 215, 242, 192, 220, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 218, 237, 190, 219, 221, 159, 217, 0,
	163, 166, 249, 235, 184, 185, 0, 0, 0, 0,
	0, 0, 0, 204, 208, 226, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 214, 0, 0,
	0, 169, 164, 202, 0, 0, 0, 302, 0, 183,
	227, 0, 0, 0, 304, 199, 127, 236, 197, 196,
	240, 243, 108, 0, 233, 180, 189, 82, 187, 111,
	107, 122, 77, 120, 114, 101, 93, 94, 76, 0,
	110, 85, 90, 84, 105, 117, 118, 83, 132, 80,
	126, 79, 167, 125, 104, 168, 116, 121, 102, 99,
	78, 119, 100, 98, 95, 87, 0, 162, 0, 113,
	123, 133, 176, 305, 128, 129, 130, 0, 0, 0,
	0, 0, 0, 301, 174, 175, 172, 173, 210, 211,
	244, 245, 246, 228, 170, 0, 0, 231, 213, 75,
	0, 96, 131, 109, 89, 124, 0, 0, 0, 0,
	0, 186, 248, 225, 224, 238, 0, 88, 115, 0,
	0, 0, 0, 0, 92, 0, 0, 134, 135, 137,
	136, 138, 239, 230, 201, 241, 178, 193, 250, 194,
	195, 222, 165, 209, 106, 191, 0, 181, 160, 188,
	161, 179, 203, 86, 206, 177, 232, 212, 303, 0,
	91, 0, 0, 247, 97, 216, 0, 112, 103, 0,
	0, 205, 234, 207, 229, 200, 223, 171, 215, 242,
	192, 220, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 218, 237, 190, 219, 221,
	159, 217, 0, 163, 166, 249, 235, 184, 185, 0,
	0, 0, 0, 0, 0, 0, 204, 208, 226, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	214, 0, 0, 0, 169, 164, 202, 0, 0, 0,
	302, 0, 183, 227, 0, 0, 0, 304, 199, 127,
	236, 197, 196, 240, 243, 108, 0, 233, 180, 189,
	82, 187, 111, 107, 122, 77, 120, 114, 101, 93,
	94, 76, 0, 110, 85, 90, 84, 105, 117, 118,
	83, 132, 80, 126, 79, 167, 125, 104, 168, 116,
	121, 102, 99, 78, 119, 100, 98, 95, 87, 0,
	162, 0, 113, 123, 133, 176, 305, 128, 129, 130,
	0, 0, 0, 0, 0, 0, 301, 174, 175, 172,
	173, 210, 211, 244, 245, 246, 228, 170, 0, 0,
	231, 213, 75, 0, 96, 131, 109, 89, 124, 0,
	0, 0, 0, 0, 186, 248, 225, 224, 238, 0,
	88, 115, 0, 0, 0, 0, 0, 92, 0, 0,
	134, 135, 137, 136, 138, 239, 230, 201, 241, 178,
	193, 250, 194, 195, 222, 165, 209, 106, 191, 0,
	181, 160, 188, 161, 179, 203, 86, 206, 177, 232,
	212, 303, 0, 91, 0, 0, 247, 97, 216, 0,
	112, 103, 0, 0, 205, 234, 207, 229, 200, 223,
	171, 215, 242, 192, 220, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 218, 237,
	190, 219, 221, 159, 217, 0, 163, 166, 249, 235,
	184, 185, 0, 0, 0, 0, 0, 0, 0, 204,
	208, 226, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 214, 0, 0, 0, 169, 164, 202,
	0, 0, 0, 302, 0, 183, 227, 0, 0, 0,
	304, 199, 127, 236, 197, 196, 240, 243, 108, 0,
	233, 180, 189, 82, 187, 111, 107, 122, 77, 120,
	114, 101, 93, 94, 76, 0, 110, 85, 90, 84,
	105, 117, 118, 83, 132, 80, 126, 79, 167, 125,
	104, 168, 116, 121, 102, 99, 78, 119, 100, 98,
	95, 87, 0, 162, 0, 113, 123, 133, 176, 305,
	128, 129, 130, 0, 0, 0, 0, 0, 0, 301,
	174, 175, 172, 173, 210, 211, 244, 245, 246, 228,
	170, 0, 0, 231, 213, 75, 0, 96, 131, 109,
	89, 124, 0, 0, 0, 0, 0, 186, 248, 225,
	224, 238, 0, 88, 115, 0, 0, 0, 0, 0,
	92, 0, 0, 134, 135, 137, 136, 138, 106, 0,
	0, 715, 0, 352, 0, 0, 0, 86, 0, 351,
	0, 0, 0, 0, 91, 0, 0, 388, 97, 0,
	0, 112, 103, 0, 0, 0, 0, 381, 382, 0,
	0, 0, 0, 0, 0, 0, 53, 0, 0, 401,
	369, 368, 370, 371, 372, 373, 0, 0, 81, 374,
	375, 376, 0, 0, 0, 349, 362, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 360,
	718, 0, 0, 0, 399, 0, 361, 0, 0, 358,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 397, 0, 0, 108,
	0, 0, 0, 0, 82, 0, 111, 107, 122, 77,
	120, 114, 101, 93, 94, 76, 0, 110, 85, 90,
	84, 105, 117, 118, 83, 132, 80, 126, 79, 0,
	125, 104, 0, 116, 121, 102, 99, 78, 119, 100,
	98, 95, 87, 0, 0, 0, 113, 123, 133, 0,
	0, 128, 129, 130, 0, 0, 0, 0, 0, 0,
	0, 389, 398, 395, 396, 393, 394, 392, 391, 390,
	400, 383, 384, 386, 0, 385, 75, 0, 96, 131,
	109, 89, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 115, 0, 0, 0, 0,
	0, 92, 0, 0, 134, 135, 137, 136, 138, 106,
	0, 0, 0, 0, 352, 0, 0, 0, 86, 0,
	351, 0, 0, 0, 0, 91, 0, 0, 388, 97,
	0, 0, 112, 103, 0, 0, 0, 0, 381, 382,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	401, 369, 368, 370, 371, 372, 373, 0, 0, 81,
	374, 375, 376, 0, 0, 0, 349, 362, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	360, 718, 0, 0, 0, 399, 0, 361, 0, 0,
	358, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 397, 0, 0,
	108, 0, 0, 0, 0, 82, 0, 111, 107, 122,
	77, 120, 114, 101, 93, 94, 76, 0, 110, 85,
	90, 84, 105, 117, 118, 83, 132, 80, 126, 79,
	0, 125, 104, 0, 116, 121, 102, 99, 78, 119,
	100, 98, 95, 87, 0, 0, 0, 113, 123, 133,
	0, 0, 128, 129, 130, 0, 0, 0, 0, 0,
	0, 0, 389, 398, 395, 396, 393, 394, 392, 391,
	390, 400, 383, 384, 386, 0, 385, 75, 0, 96,
	131, 109, 89, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 115, 0, 0, 0,
	0, 0, 92, 0, 0, 134, 135, 137, 136, 138,
	106, 0, 0, 0, 0, 352, 0, 0, 0, 86,
	0, 351, 0, 0, 0, 0, 91, 0, 0, 388,
	97, 0, 0, 112, 103, 0, 0, 0, 0, 381,
	382, 0, 0, 0, 0, 0, 0, 0, 53, 0,
	343, 401, 369, 368, 370, 371, 372, 373, 0, 0,
	81, 374, 375, 376, 0, 0, 0, 349, 362, 0,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 360, 0, 0, 0, 0, 399, 0, 361, 0,
	0, 358, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 397, 0,
	0, 108, 0, 0, 0, 0, 82, 0, 111, 107,
	122, 77, 120, 114, 101, 93, 94, 76, 0, 110,
	85, 90, 84, 105, 117, 118, 83, 132, 80, 126,
	79, 0, 125, 104, 0, 116, 121, 102, 99, 78,
	119, 100, 98, 95, 87, 0, 0, 0, 113, 123,
	133, 0, 0, 128, 129, 130, 0, 0, 0, 0,
	0, 0, 0, 389, 398, 395, 396, 393, 394, 392,
	391, 390, 400, 383, 384, 386, 0, 385, 75, 0,
	96, 131, 109, 89, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 115, 0, 0,
	24, 0, 0, 92, 0, 0, 134, 135, 137, 136,
	138, 106, 0, 0, 0, 0, 352, 0, 0, 0,
	86, 0, 351, 0, 0, 0, 0, 91, 0, 0,
	388, 97, 0, 0, 112, 103, 0, 0, 0, 0,
	381, 382, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 401, 369, 368, 370, 371, 372, 373, 0,
	0, 81, 374, 375, 376, 0, 0, 0, 349, 362,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 360, 0, 0, 0, 0, 399, 0, 361,
	0, 0, 358, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 397,
	0, 0, 108, 0, 0, 0, 0, 82, 0, 111,
	107, 122, 77, 120, 114, 101, 93, 94, 76, 0,
	110, 85, 90, 84, 105, 117, 118, 83, 132, 80,
	126, 79, 0, 125, 104, 0, 116, 121, 102, 99,
	78, 119, 100, 98, 95, 87, 0, 0, 0, 113,
	123, 133, 0, 0, 128, 129, 130, 0, 0, 0,
	0, 0, 0, 0, 389, 398, 395, 396, 393, 394,
	392, 391, 390, 400, 383, 384, 386, 0, 385, 75,
	0, 96, 131, 109, 89, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 115, 0,
	0, 0, 0, 0, 92, 0, 0, 134, 135, 137,
	136, 138, 106, 0, 0, 0, 0, 352, 0, 0,
	0, 86, 0, 351, 0, 0, 0, 0, 91, 0,
	0, 388, 97, 0, 0, 112, 103, 0, 0, 0,
	0, 381, 382, 0, 0, 0, 0, 0, 0, 0,
	53, 0, 0, 401, 369, 368, 370, 371, 372, 373,
	0, 0, 81, 374, 375, 376, 0, 0, 0, 349,
	362, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 360, 0, 0, 0, 0, 399, 0,
	361, 0, 0, 358, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	397, 0, 0, 108, 0, 0, 0, 0, 82, 0,
	111, 107, 122, 77, 120, 114, 101, 93, 94, 76,
	0, 110, 85, 90, 84, 105, 117, 118, 83, 132,
	80, 126, 79, 0, 125, 104, 0, 116, 121, 102,
	99, 78, 119, 100, 98, 95, 87, 0, 0, 0,
	113, 123, 133, 0, 0, 128, 129, 130, 0, 0,
	0, 0, 0, 0, 0, 389, 398, 395, 396, 393,
	394, 392, 391, 390, 400, 383, 384, 386, 0, 385,
	75, 0, 96, 131, 109, 89, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 88, 115,
	0, 0, 0, 0, 0, 92, 86, 0, 134, 135,
	137, 136, 138, 91, 0, 0, 388, 97, 0, 0,
	112, 103, 0, 0, 0, 0, 381, 382, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 401, 369,
	368, 370, 371, 372, 373, 0, 0, 81, 374, 375,
	376, 0, 0, 0, 0, 362, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 360, 0,
	0, 0, 0, 399, 0, 361, 0, 0, 358, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 397, 0, 0, 108, 0,
	0, 0, 0, 82, 0, 111, 107, 122, 77, 120,
	114, 101, 93, 94, 76, 0, 110, 85, 90, 84,
	105, 117, 118, 83, 132, 80, 126, 79, 0, 125,
	104, 0, 116, 121, 102, 99, 78, 119, 100, 98,
	95, 87, 0, 0, 0, 113, 123, 133, 0, 0,
	128, 129, 130, 0, 0, 0, 0, 0, 0, 0,
	389, 398, 395, 396, 393, 394, 392, 391, 390, 400,
	383, 384, 386, 0, 385, 75, 0, 96, 131, 109,
	89, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 88, 115, 0, 0, 0, 0, 0,
	92, 86, 0, 134, 135, 137, 136, 138, 91, 0,
	0, 0, 97, 0, 0, 112, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 510,
	520, 521, 513, 514, 515, 516, 517, 518, 519, 512,
	0, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 0, 82, 0,
	111, 107, 122, 77, 120, 114, 101, 93, 94, 76,
	0, 110, 85, 90, 84, 105, 117, 118, 83, 132,
	80, 126, 79, 0, 125, 104, 0, 116, 121, 102,
	99, 78, 119, 100, 98, 95, 87, 0, 0, 0,
	113, 123, 133, 0, 0, 128, 129, 130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 828, 0, 0, 0,
	75, 86, 96, 131, 109, 89, 124, 0, 91, 0,
	0, 0, 97, 0, 0, 112, 103, 0, 88, 115,
	0, 0, 0, 0, 0, 92, 0, 0, 134, 135,
	137, 136, 138, 73, 0, 830, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 499, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 0, 82, 0,
	111, 107, 122, 77, 120, 114, 101, 93, 94, 76,
	0, 110, 85, 90, 84, 105, 117, 118, 83, 132,
	80, 126, 79, 0, 125, 104, 0, 116, 121, 102,
	99, 78, 119, 100, 98, 95, 87, 0, 0, 0,
	113, 123, 133, 106, 0, 128, 129, 130, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 97, 0, 0, 112, 103, 0, 0,
	75, 0, 96, 131, 109, 89, 124, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 88, 115,
	0, 0, 0, 81, 0, 92, 0, 0, 134, 135,
	137, 136, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 127, 0,
	0, 0, 71, 0, 108, 0, 0, 0, 0, 82,
	0, 111, 107, 122, 77, 120, 114, 101, 93, 94,
	76, 0, 110, 85, 90, 84, 105, 117, 118, 83,
	132, 80, 126, 79, 0, 125, 104, 0, 116, 121,
	102, 99, 78, 119, 100, 98, 95, 87, 0, 0,
	0, 113, 123, 133, 0, 0, 128, 129, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 96, 131, 109, 89, 124, 0, 0,
	0, 0, 0, 0, 24, 0, 0, 0, 0, 88,
	115, 0, 0, 0, 0, 106, 92, 0, 0, 134,
	135, 137, 136, 138, 86, 0, 0, 0, 0, 0,
	0, 91, 0, 0, 0, 97, 0, 0, 112, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 108, 0, 0, 0,
	0, 82, 0, 111, 107, 122, 77, 120, 114, 101,
	93, 94, 76, 0, 110, 85, 90, 84, 105, 117,
	118, 83, 132, 80, 126, 79, 0, 125, 104, 0,
	116, 121, 102, 99, 78, 119, 100, 98, 95, 87,
	0, 0, 0, 113, 123, 133, 0, 106, 128, 129,
	130, 1005, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 97, 0, 0,
	112, 103, 0, 75, 0, 96, 131, 109, 89, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	1007, 88, 115, 0, 0, 0, 0, 81, 92, 0,
	0, 134, 135, 137, 136, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 0, 82, 0, 111, 107, 122, 77, 120,
	114, 101, 93, 94, 76, 0, 110, 85, 90, 84,
	105, 117, 118, 83, 132, 80, 126, 79, 0, 125,
	104, 0, 116, 121, 102, 99, 78, 119, 100, 98,
	95, 87, 0, 0, 0, 113, 123, 133, 0, 0,
	128, 129, 130, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 96, 131, 109,
	89, 124, 0, 0, 0, 0, 0, 0, 24, 0,
	0, 0, 0, 88, 115, 0, 0, 0, 0, 106,
	92, 0, 0, 134, 135, 137, 136, 138, 86, 0,
	0, 0, 0, 0, 0, 91, 0, 0, 0, 97,
	0, 0, 112, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 82, 0, 111, 107, 122,
	77, 120, 114, 101, 93, 94, 76, 0, 110, 85,
	90, 84, 105, 117, 118, 83, 132, 80, 126, 79,
	0, 125, 104, 0, 116, 121, 102, 99, 78, 119,
	100, 98, 95, 87, 0, 0, 0, 113, 123, 133,
	106, 0, 128, 129, 130, 0, 0, 0, 0, 86,
	0, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	97, 0, 0, 112, 103, 0, 0, 75, 0, 96,
	131, 109, 89, 124, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 577, 88, 115, 578, 0, 0,
	81, 0, 92, 0, 0, 134, 135, 137, 136, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 108, 0, 0, 0, 0, 82, 0, 111, 107,
	122, 77, 120, 114, 101, 93, 94, 76, 0, 110,
	85, 90, 84, 105, 117, 118, 83, 132, 80, 126,
	79, 0, 125, 104, 0, 116, 121, 102, 99, 78,
	119, 100, 98, 95, 87, 0, 0, 0, 113, 123,
	133, 106, 0, 128, 129, 130, 0, 0, 0, 0,
	86, 0, 425, 0, 0, 0, 0, 91, 0, 0,
	0, 97, 0, 0, 112, 103, 0, 0, 75, 0,
	96, 131, 109, 89, 124, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 424, 0, 88, 115, 0, 0,
	0, 81, 0, 92, 0, 0, 134, 135, 137, 136,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 82, 0, 111,
	107, 122, 77, 120, 114, 101, 93, 94, 76, 0,
	110, 85, 90, 84, 105, 117, 118, 83, 132, 80,
	126, 79, 0, 125, 104, 0, 116, 121, 102, 99,
	78, 119, 100, 98, 95, 87, 0, 0, 0, 113,
	123, 133, 106, 0, 128, 129, 130, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 0, 0, 91, 0,
	0, 0, 97, 0, 0, 112, 103, 0, 0, 75,
	0, 96, 131, 109, 89, 124, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 1007, 0, 88, 115, 0,
	0, 0, 81, 0, 92, 0, 0, 134, 135, 137,
	136, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 0, 82, 0,
	111, 107, 122, 77, 120, 114, 101, 93, 94, 76,
	0, 110, 85, 90, 84, 105, 117, 118, 83, 132,
	80, 126, 79, 0, 125, 104, 0, 116, 121, 102,
	99, 78, 119, 100, 98, 95, 87, 0, 0, 0,
	113, 123, 133, 106, 0, 128, 129, 130, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 97, 0, 0, 112, 103, 0, 0,
	75, 0, 96, 131, 109, 89, 124, 0, 0, 0,
	0, 53, 0, 0, 253, 0, 0, 0, 88, 115,
	0, 0, 0, 81, 0, 92, 0, 0, 134, 135,
	137, 136, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 108, 0, 0, 0, 0, 82,
	0, 111, 107, 122, 77, 120, 114, 101, 93, 94,
	76, 0, 110, 85, 90, 84, 105, 117, 118, 83,
	132, 80, 126, 79, 0, 125, 104, 0, 116, 121,
	102, 99, 78, 119, 100, 98, 95, 87, 0, 0,
	0, 113, 123, 133, 106, 0, 128, 129, 130, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 0, 0,
	91, 0, 0, 0, 97, 0, 0, 112, 103, 0,
	0, 75, 0, 96, 131, 109, 89, 124, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 830, 0, 88,
	115, 0, 0, 0, 81, 0, 92, 0, 0, 134,
	135, 137, 136, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	82, 0, 111, 107, 122, 77, 120, 114, 101, 93,
	94, 76, 0, 110, 85, 90, 84, 105, 117, 118,
	83, 132, 80, 126, 79, 0, 125, 104, 0, 116,
	121, 102, 99, 78, 119, 100, 98, 95, 87, 0,
	0, 0, 113, 123, 133, 106, 0, 128, 129, 130,
	0, 0, 0, 414, 86, 0, 0, 0, 0, 0,
	0, 91, 0, 0, 0, 97, 0, 0, 112, 103,
	0, 0, 75, 0, 96, 131, 109, 89, 124, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	88, 115, 0, 0, 0, 81, 0, 92, 0, 0,
	134, 135, 137, 136, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 108, 0, 0, 0,
	0, 82, 0, 111, 107, 122, 77, 120, 114, 101,
	93, 94, 76, 0, 110, 85, 90, 84, 105, 117,
	118, 83, 132, 80, 126, 79, 0, 125, 104, 0,
	116, 121, 102, 99, 78, 119, 100, 98, 95, 87,
	0, 0, 0, 113, 123, 133, 106, 0, 128, 129,
	130, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	0, 0, 91, 0, 0, 0, 97, 0, 0, 112,
	103, 0, 0, 75, 0, 96, 131, 109, 89, 124,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 88, 115, 0, 0, 0, 81, 0, 92, 0,
	0, 134, 135, 137, 136, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 82, 0, 111, 107, 122, 77, 120, 114,
	101, 93, 94, 76, 0, 110, 85, 90, 84, 105,
	117, 118, 83, 132, 80, 126, 79, 0, 125, 104,
	0, 116, 121, 102, 99, 78, 119, 100, 98, 95,
	87, 0, 0, 0, 113, 123, 133, 106, 0, 128,
	129, 130, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 97, 0, 0,
	112, 103, 0, 0, 75, 0, 96, 131, 109, 89,
	124, 0, 0, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 88, 115, 0, 0, 0, 81, 0, 92,
	0, 0, 134, 135, 137, 136, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 0, 82, 0, 111, 107, 122, 77, 120,
	114, 101, 93, 94, 76, 0, 110, 85, 90, 84,
	105, 117, 118, 83, 132, 80, 126, 79, 0, 125,
	104, 0, 116, 121, 102, 99, 78, 119, 100, 98,
	95, 87, 0, 0, 0, 113, 123, 133, 106, 0,
	128, 129, 130, 0, 0, 0, 0, 86, 0, 0,
	0, 0, 0, 0, 91, 0, 0, 0, 97, 0,
	0, 112, 103, 0, 0, 75, 0, 96, 131, 109,
	89, 124, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 88, 115, 0, 0, 0, 81, 0,
	92, 0, 0, 134, 135, 137, 136, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 108,
	0, 0, 0, 0, 82, 0, 111, 107, 122, 77,
	120, 114, 101, 93, 94, 76, 0, 110, 85, 90,
	84, 105, 117, 118, 83, 132, 80, 126, 79, 0,
	125, 104, 0, 116, 121, 102, 99, 78, 119, 100,
	98, 95, 87, 0, 0, 0, 113, 123, 133, 0,
	0, 128, 129, 130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75, 0, 96, 131,
	109, 89, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 115, 0, 0, 0, 0,
	0, 92, 0, 0, 134, 135, 137, 136, 138,
}
var yyPact = [...]int{

	1278, -1000, -187, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 700, 734, -1000, -1000, -1000, -1000, -1000, 497,
	5526, 33, -13, 59, 57, 1806, 53, 7561, -1000, -1000,
	20, -1000, -164, -1000, -1000, -177, -1000, -1000, -1000, -1000,
	533, -1000, -1000, -1000, -1000, -1000, 689, 698, 590, 683,
	626, -1000, 33, 7561, 725, 2039, -137, 341, 26, 50,
	26, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 52,
	-1000, 24, 447, 24, 7561, 7561, -1000, 722, -63, 720,
	-11, -1000, -1000, -71, -1000, -76, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7561, -1000, -1000, -1000, -1000, -1000, -1000, 270, -1000,
	-1000, -1000, -1000, 485, 485, -1000, 7561, -1000, -1000, -1000,
	-1000, 417, 661, 4775, 4775, 700, -1000, 533, -1000, -1000,
	-1000, 652, -1000, -1000, 226, 7078, 655, 84, 7561, 481,
	2971, -1000, -1000, -1000, 178, 6434, -1000, -1000, -1000, 654,
	-1000, -1000, -1000, -1000, -1000, -1000, 695, 693, 439, -1000,
	1042, 7561, 198, 426, 7561, 7561, 7561, 676, 556, 7561,
	-1000, -1000, -1000, 7561, 713, 7561, 7561, 7561, -1000, -1000,
	717, -1000, 713, -1000, -1000, -1000, -1000, -1000, 4775, -1000,
	-1000, 135, -1000, -1000, -1000, 730, 109, 246, -1000, 4775,
	1356, 485, 485, -1000, -1000, 71, -1000, -1000, 4980, 4980,
	4980, 4980, 4980, 4980, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 485, 83, -1000,
	4554, 485, 485, 485, 485, 485, 485, 4775, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, -1000, -1000, 482, -1000, 283, 689, 417, 626, 6273,
	487, -1000, -1000, 474, 7561, -1000, 7400, 3670, 708, 2971,
	481, 4775, 90, -1000, -1000, -1000, -1000, -147, 485, -158,
	204, 275, -58, -1000, -1000, 486, -1000, 486, 486, 486,
	486, -33, -33, -33, -33, -1000, -1000, -1000, -1000, -1000,
	539, -1000, 486, 486, 486, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 538, 538, 538, 496, 496, -1000, 675,
	555, -1000, 48, 480, -1000, -1000, 7561, -1000, -1000, 708,
	7561, -1000, -1000, -1000, 689, -74, -1000, -1000, -1000, -1000,
	436, 225, -1000, 7561, -1000, -1000, -1000, 608, 4775, 4775,
	268, 4775, 4775, 114, 4980, 235, 144, 4980, 4980, 4980,
	4980, 4980, 4980, 4980, 4980, 4980, 4980, 4980, 4980, 4980,
	4980, 4980, 286, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 418, -1000, 533, 380, 380, 92, 92, 92, 92,
	92, 5185, 3891, 3437, 417, 4554, 4112, 4112, 4775, 4775,
	4112, 680, 187, 225, 7239, -1000, 417, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4112, 4112, 4112, 4112, 4775, -1000,
	-1000, -1000, 661, -1000, 680, 694, -1000, 637, 634, 4112,
	-1000, 554, 7400, 485, -1000, 6112, -1000, 512, -1000, 162,
	-1000, 81, -1000, -1000, -1000, 700, 4775, -1000, 225, -1000,
	391, 485, 388, -1000, -52, 160, -1000, -1000, 498, 667,
	134, 378, 132, -1000, -1000, 659, -1000, 206, -60, -1000,
	-1000, 261, -33, -33, -1000, -1000, 90, 651, 90, 90,
	90, 315, -1000, -1000, -1000, -1000, 260, -1000, -1000, -1000,
	250, -1000, -1000, 7561, -1000, 154, 156, 35, 21, 19,
	1, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7561,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 313, -1000,
	4775, -1000, -1000, 618, 114, 168, -1000, -1000, 284, -1000,
	-1000, 225, 225, 291, -1000, -1000, -1000, -1000, 235, 4980,
	4980, 4980, 40, 291, 658, 523, 476, 92, 301, 301,
	121, 121, 121, 121, 121, 181, 181, -1000, -1000, -1000,
	417, -1000, -1000, -1000, 417, 4112, 478, -1000, -1000, 5365,
	79, 485, 78, -1000, -1000, 417, 373, 373, 97, 324,
	373, 4112, 188, -1000, 4775, 417, -1000, 373, 417, 373,
	373, -1000, -1000, 7561, -1000, -1000, -1000, -1000, 585, -1000,
	670, 465, 472, -1000, -1000, 4333, 417, 432, 77, 700,
	7400, 4775, 3437, 689, 225, -1000, 374, 417, 657, 123,
	367, 7239, -1000, 365, -1000, -1000, 361, 552, 43, -1000,
	-1000, -1000, 450, 90, 90, -1000, 142, -1000, -1000, -1000,
	422, -1000, 477, 416, 2505, -1000, 7561, -1000, -1000, -1000,
	356, -34, 497, 351, 341, -1000, -1000, -1000, -1000, 225,
	-1000, -1000, -1000, -1000, -1000, -1000, 40, 291, 267, -1000,
	4980, 4980, -1000, -1000, 373, 4112, -1000, -1000, 6917, -1000,
	-1000, 2738, 4112, 3204, -1000, -1000, -1000, 94, 286, 94,
	-104, 494, 180, -1000, 4775, 167, -1000, -1000, -1000, -1000,
	-1000, -1000, 708, 6756, 666, -1000, 485, -1000, -1000, 622,
	7239, 7239, 689, -1000, 225, -1000, -1000, 417, 2505, -156,
	-39, 247, -1000, 371, -1000, 486, -1000, -1000, -54, 729,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 297, 242, -1000, 234, -1000, -1000, -1000, -1000, -1000,
	-1000, 647, -1000, -1000, -1000, -1000, 4980, 291, 291, -1000,
	-1000, -1000, -1000, 75, 417, -1000, 417, 486, 486, -1000,
	486, 496, -1000, 486, -16, 486, -17, 417, 417, 485,
	-101, -1000, 225, 4775, 705, 475, 515, -1000, -1000, -1000,
	678, 5738, 5900, 728, -1000, 485, -1000, 533, 74, -1000,
	-1000, 2505, -1000, -1000, -1000, -1000, 122, -1000, -119, 7239,
	-1000, 104, -1000, -80, -1000, 449, 433, 322, 291, 2272,
	-1000, -1000, -1000, 65, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4980, 417, 288, 225, 696, 692, 6756, 6756,
	6756, 6756, -1000, 603, 589, -1000, 613, 607, 617, 7561,
	-1000, 360, 5738, 102, -1000, 6595, -1000, -1000, 7400, 472,
	417, 7239, -1000, 293, 641, -1000, 209, 665, -1000, 662,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 115, -1000, -1000,
	-1000, 4775, 4775, 515, 550, 592, -1000, -1000, -1000, -1000,
	568, -1000, 567, -1000, -1000, -1000, -1000, -1000, 47, 44,
	39, -1000, 468, -1000, -1000, -1000, 639, -1000, 279, -1000,
	-1000, 417, 45, -125, 225, 453, 4775, 4775, -1000, -1000,
	485, 485, 485, -1000, -1000, -1000, 609, -113, -132, 225,
	225, 7239, 7239, 7239, -1000, 588, -1000, 355, -1000, 355,
	355, -122, -1000, 7239, -1000, -1000, -127, -1000, -133, -1000,
}
var yyPgo = [...]int{

	0, 924, 922, 921, 920, 919, 918, 913, 21, 378,
	911, 910, 909, 908, 906, 905, 901, 900, 899, 898,
	897, 896, 893, 892, 890, 71, 885, 884, 877, 46,
	873, 48, 872, 871, 855, 32, 34, 25, 37, 132,
	851, 12, 19, 15, 850, 844, 3, 842, 988, 840,
	49, 838, 837, 836, 2, 17, 835, 833, 832, 830,
	54, 715, 828, 827, 826, 825, 824, 823, 39, 1,
	10, 29, 11, 822, 6, 9, 821, 35, 820, 819,
	818, 817, 53, 816, 47, 815, 26, 44, 814, 30,
	4, 33, 50, 55, 812, 811, 810, 313, 807, 129,
	287, 806, 40, 805, 804, 20, 0, 14, 13, 24,
	802, 801, 27, 8, 800, 799, 43, 5, 18, 798,
	16, 796, 793, 792, 789, 788, 787, 785, 61, 784,
	781, 780, 42, 95, 779, 778, 774, 773, 771, 769,
	52, 23, 767, 764, 763, 749, 73, 748, 41, 28,
	747, 746, 745, 7, 743, 742, 741, 69, 176, 740,
	152,
}
var yyR1 = [...]int{

	0, 155, 156, 156, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 9, 10, 10, 11,
	11, 12, 12, 28, 28, 13, 14, 15, 15, 119,
	119, 16, 16, 16, 16, 16, 19, 149, 151, 135,
	135, 134, 134, 136, 136, 137, 137, 137, 150, 150,
	150, 146, 122, 122, 122, 125, 125, 123, 123, 123,
	123, 123, 123, 123, 124, 124, 124, 124, 124, 126,
	126, 126, 126, 126, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 145, 145,
	128, 128, 140, 140, 141, 141, 141, 138, 138, 139,
	139, 142, 142, 142, 129, 129, 129, 129, 129, 129,
	130, 130, 143, 143, 132, 132, 132, 133, 133, 144,
	144, 144, 144, 144, 131, 131, 147, 147, 152, 152,
	152, 152, 152, 148, 148, 154, 154, 153, 17, 17,
	17, 17, 17, 17, 17, 17, 18, 18, 18, 51,
	51, 1, 20, 2, 3, 4, 4, 5, 5, 5,
	5, 6, 6, 6, 6, 121, 121, 121, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 34,
	34, 50, 50, 24, 22, 23, 23, 23, 23, 159,
	25, 26, 26, 27, 27, 27, 31, 31, 31, 29,
	29, 30, 30, 37, 37, 36, 36, 38, 38, 38,
	38, 110, 110, 110, 109, 109, 40, 40, 41, 41,
	42, 42, 43, 43, 43, 52, 44, 44, 44, 44,
	115, 115, 114, 114, 114, 113, 113, 45, 45, 45,
	45, 46, 46, 46, 46, 47, 47, 49, 49, 48,
	48, 53, 53, 53, 53, 54, 54, 55, 55, 39,
	39, 39, 39, 39, 39, 39, 98, 98, 57, 57,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	67, 67, 67, 67, 67, 67, 58, 58, 58, 58,
	58, 58, 58, 35, 35, 68, 68, 68, 74, 69,
	69, 61, 61, 61, 61, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
	61, 65, 65, 65, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 64, 64, 64, 64, 64, 64, 64,
	64, 160, 160, 66, 66, 66, 66, 32, 32, 32,
	32, 32, 118, 118, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 78, 78, 33,
	33, 76, 76, 77, 79, 79, 75, 75, 75, 60,
	60, 60, 60, 60, 60, 60, 62, 62, 62, 80,
	80, 81, 81, 82, 82, 83, 83, 84, 85, 85,
	85, 86, 86, 86, 86, 87, 87, 87, 59, 59,
	59, 59, 59, 59, 88, 88, 88, 88, 89, 89,
	70, 70, 72, 72, 71, 73, 90, 90, 91, 92,
	92, 93, 93, 95, 95, 95, 94, 94, 94, 96,
	96, 99, 99, 100, 100, 97, 97, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 102, 102, 102,
	103, 103, 104, 104, 104, 107, 107, 108, 108, 111,
	111, 112, 112, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 157, 158, 116, 117, 117, 117,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 7, 10, 1, 3, 1,
	3, 6, 7, 1, 1, 8, 7, 3, 4, 1,
	1, 2, 9, 8, 4, 7, 4, 4, 4, 0,
	3, 0, 4, 0, 3, 0, 1, 1, 1, 3,
	3, 8, 3, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 4, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 0,
	1, 0, 1, 2, 0, 2, 2, 2, 2, 2,
	0, 3, 0, 1, 0, 3, 3, 0, 2, 0,
	2, 1, 2, 1, 0, 2, 4, 7, 2, 3,
	2, 2, 3, 1, 1, 1, 3, 2, 6, 7,
	7, 7, 9, 7, 7, 7, 4, 5, 4, 1,
	3, 3, 3, 2, 2, 3, 4, 2, 3, 2,
	2, 4, 4, 3, 6, 1, 1, 1, 3, 5,
	6, 5, 5, 5, 3, 3, 6, 3, 5, 0,
	3, 0, 2, 4, 2, 2, 2, 2, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 0, 1, 0, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 3, 3, 3, 5, 5, 3,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 0, 5, 5, 5, 1, 3, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 6, 4, 4, 6, 6, 6, 9,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 0, 2, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 4, 2, 1,
	3, 5, 4, 6, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -155, -7, -8, -12, -13, -14, -15, -16, -17,
	-18, -1, -20, -21, -24, -22, -2, -3, -4, -5,
	-6, -23, -9, -10, 6, -28, 8, 9, 29, -19,
	113, 114, 115, 137, 117, 130, 32, 52, 215, 132,
	222, 225, 226, 229, 228, 233, 24, 131, 135, 136,
	-157, 7, 199, 55, -156, 238, -82, 14, -27, 5,
	-25, -159, -25, -25, -25, -25, -149, 55, 191, -104,
	120, 126, -107, 58, -106, 205, 144, 138, 166, 157,
	155, 67, 133, 153, 149, 147, 26, 171, 223, 210,
	148, 33, 230, 142, 143, 170, 207, 37, 169, 165,
	168, 141, 164, 41, 160, 150, 17, 136, 128, 209,
	146, 135, 40, 175, 140, 224, 162, 151, 152, 167,
	139, 163, 137, 176, 211, 159, 156, 122, 180, 181,
	182, 208, 154, 177, 233, 234, 236, 235, 237, -97,
	124, 120, 121, 191, 120, 120, -121, 179, 31, 189,
	113, 183, 184, 186, 188, 120, 58, -105, -106, 73,
	21, 23, 173, 76, 108, 15, 77, 158, 161, 107,
	200, 50, 192, 193, 190, 191, 178, 28, 9, 24,
	131, 20, 101, 115, 80, 81, 217, 134, 22, 132,
	70, 18, 53, 10, 12, 13, 125, 124, 92, 121,
	48, 7, 109, 25, 89, 44, 27, 46, 90, 16,
	194, 195, 30, 204, 103, 51, 38, 74, 68, 71,
	54, 72, 14, 49, 220, 219, 91, 116, 199, 47,
	6, 203, 29, 130, 45, 79, 123, 69, 221, 5,
	126, 8, 52, 127, 196, 197, 198, 36, 218, 78,
	11, 120, -111, 58, -106, -116, -116, 61, 209, -116,
	227, -116, -116, 234, 236, 235, 237, -116, -116, -116,
	-116, -8, -86, 16, 15, -11, -9, -157, 6, 19,
	20, -31, 42, 43, -26, -97, -48, -111, 10, -92,
	-119, -93, 231, 230, -108, -95, -107, -105, 161, 158,
	232, 189, 113, 31, 120, 179, 212, 216, -150, -146,
	58, -100, 125, 121, -100, 120, -99, 125, 58, -99,
	-48, -48, -116, 10, 179, 10, 120, 191, -116, -116,
	185, -116, 188, -48, -116, 61, -116, -71, -157, -71,
	-116, -48, -158, 57, -87, 18, 30, -39, -56, 74,
	-61, 28, 22, -60, -57, -75, -73, -74, 108, 97,
	98, 105, 75, 109, -65, -63, -64, -66, 60, 59,
	61, 62, 63, 64, 68, 69, 70, -107, -111, -71,
	-157, 46, 47, 200, 201, 204, 202, 77, 36, 190,
	198, 197, 196, 194, 195, 192, 193, 125, 191, 103,
	199, 58, -106, -83, -84, -39, -82, -8, -25, 38,
	-29, 20, 66, -49, 25, -48, 29, 110, -48, 56,
	-92, 82, -94, -107, 60, 28, 29, 15, 15, 57,
	56, -122, -125, -127, -126, -123, -124, 155, 156, 108,
	159, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 133, 151, 152, 153, 154, 138, 139, 140, 141,
	142, 143, 144, 146, 147, 148, 149, 150, -111, 74,
	58, -48, -48, -51, -48, 22, 54, -111, -48, -50,
	10, -48, -48, -48, -34, 10, -50, -116, -116, -116,
	-69, -39, -116, -102, 123, 21, 8, 92, 73, 72,
	89, 56, 17, -39, -58, 92, 74, 90, 91, 76,
	94, 93, 104, 97, 98, 99, 100, 101, 102, 103,
	95, 96, 107, 82, 83, 84, 85, 86, 87, 88,
	-98, -157, -74, -157, 111, 112, -61, -61, -61, -61,
	-61, -61, -157, 110, -8, -157, -157, -157, -157, -157,
	-157, -157, -78, -39, -157, -160, -157, -160, -160, -160,
	-160, -160, -160, -160, -157, -157, -157, -157, 56, -85,
	23, 24, -86, -158, -31, -62, -107, 61, 64, -30,
	45, -59, 29, 36, -8, -157, -48, -90, -91, -75,
	-107, -111, -112, -111, -105, -55, 11, -93, -39, -133,
	107, 214, -157, -151, -135, 223, -146, -147, -152, 128,
	126, -148, 33, 121, 27, -142, 68, 74, -138, 176,
	-128, 55, -128, -128, -128, -128, -132, 158, -132, -132,
	-132, 55, -128, -128, -128, -140, 55, -140, -140, -141,
	55, -141, 22, 54, -101, 116, 223, 200, 118, 115,
	119, 114, 173, 158, 67, 28, 14, 211, 58, 56,
	-48, -116, -55, -48, -116, -116, -116, -86, 187, -116,
	56, -158, -48, 40, -39, -39, -67, 68, 74, 69,
	70, -39, -39, -61, -68, -71, -74, 65, 92, 90,
	91, 76, -61, -61, -61, -61, -61, -61, -61, -61,
	-61, -61, -61, -61, -61, -61, -61, -118, 58, 60,
	58, -60, -60, -107, -37, 20, -36, -38, 99, -39,
	-111, -108, -112, -105, -158, -8, -36, -36, -39, -39,
	-36, -29, -76, -77, 78, -107, -158, -36, -37, -36,
	-36, -84, -87, -96, 18, 10, 36, 36, -36, -89,
	54, -90, -70, -72, -71, -157, -8, -88, -107, -55,
	56, 82, 110, -82, -39, 58, -157, 58, -136, 173,
	82, 55, 27, -148, 58, 58, -148, -129, 28, 68,
	-139, 177, 61, -132, -132, -133, 29, -133, -133, -133,
	-145, 60, 61, 61, -48, -116, -102, -103, 121, 27,
	82, 123, 129, 129, 129, -48, -116, -116, 60, -39,
	-116, 41, 68, 69, 70, -68, -61, -61, -61, -35,
	134, 73, -158, -158, -36, 56, -110, -109, 21, -107,
	60, 110, -157, 110, -158, -158, -158, 56, 127, 21,
	-158, -36, -79, -77, 80, -39, -158, -158, -158, -158,
	-158, -48, -40, 10, 26, -89, 56, -158, -158, -158,
	56, 110, -82, -91, -39, -108, -86, 58, -158, -134,
	28, 82, 58, -154, -153, -107, 58, 58, -130, 54,
	60, 61, 62, 68, 190, 57, -133, -133, 58, 108,
	57, 56, 56, 57, 56, -117, -157, -108, -48, -116,
	58, 158, -149, 58, -146, -35, 73, -61, -61, -158,
	-38, -109, 99, -112, -37, -108, -120, 108, 155, 133,
	153, 149, 170, 160, 175, 151, 176, -118, -120, 205,
	-82, 81, -39, 79, -55, -41, -42, -43, -44, -52,
	-74, -157, -48, 27, -72, 36, -8, -157, -107, -107,
	-86, -158, -117, -137, 230, 224, 161, 61, 57, 56,
	-128, -143, 173, 8, 60, 61, 61, 29, -61, 110,
	-158, -158, -128, -128, -128, -141, -128, 143, -128, 143,
	-158, -158, -157, -33, 203, -39, -80, 12, 56, -45,
	-46, -47, 44, 48, 50, 45, 46, 47, 51, -115,
	21, -41, -157, -114, -113, 21, -111, 60, 8, -70,
	-8, 110, -117, 82, 208, -153, -144, 128, 27, 126,
	190, 57, 57, 58, 99, -132, 58, -61, -158, 60,
	-81, 13, 15, -42, -43, -42, -43, 44, 44, 44,
	49, 44, 49, 44, -46, -111, -158, -53, 52, 124,
	53, -113, -90, -158, -107, 58, 34, -131, 67, 27,
	27, -32, 92, 208, -39, -69, 54, 54, 44, 44,
	121, 121, 121, 35, 60, -158, 206, 51, 209, -39,
	-39, -157, -157, -157, 41, 207, 210, -54, -107, -54,
	-54, 41, -158, 56, -158, -158, 208, -107, 209, 210,
}
var yyDef = [...]int{

	0, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 413, 0, 199, 199, 199, 199, 199, 0,
	482, 465, 0, 0, 0, 0, 0, 0, 656, 656,
	0, 656, 0, 656, 656, 0, 656, 656, 656, 656,
	0, 33, 34, 654, 1, 3, 421, 0, 0, 203,
	206, 201, 465, 0, 0, 0, 41, 0, 463, 0,
	463, 483, 484, 485, 486, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 0,
	466, 461, 0, 461, 0, 0, 656, 573, 530, 504,
	506, 656, 656, 0, 656, 572, 175, 176, 177, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	505, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 0, 194, 489, 490, 163, 164, 656, 0, 167,
	656, 169, 170, 0, 0, 656, 0, 195, 196, 197,
	198, 27, 425, 0, 0, 413, 29, 0, 199, 204,
	205, 209, 207, 208, 200, 0, 0, 259, 0, 37,
	0, 449, 39, -2, 0, 0, 487, 488, -2, 501,
	455, 504, 506, 530, 572, 573, 0, 0, 0, 58,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 162, 178, 0, 191, 0, 0, 0, 184, 185,
	189, 187, 191, 656, 165, 656, 168, 656, 0, 656,
	173, 477, 28, 655, 23, 0, 0, 422, 269, 0,
	274, 276, 0, 311, 312, 313, 314, 315, 0, 0,
	0, 0, 0, 0, 337, 338, 339, 340, 399, 400,
	401, 402, 403, 404, 405, 278, 279, 396, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 361,
	361, 361, 361, 361, 361, 361, 361, 0, 0, 0,
	0, -2, -2, 414, 415, 418, 421, 27, 206, 0,
	211, 210, 202, 0, 0, 258, 0, 0, 267, 0,
	38, 0, 127, 456, 457, 458, 454, 0, 0, 49,
	0, 111, 107, 63, 64, 100, 66, 100, 100, 100,
	100, 124, 124, 124, 124, 92, 93, 94, 95, 96,
	0, 79, 100, 100, 100, 83, 67, 68, 69, 70,
	71, 72, 73, 102, 102, 102, 104, 104, 44, 0,
	0, 46, 0, 156, 159, 462, 0, 158, 656, 267,
	0, 656, 656, 656, 421, 0, 656, 193, 166, 171,
	0, 309, 172, 0, 478, 479, 426, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 298, 299, 300, 301, 302,
	275, 0, 289, 0, 0, 0, 331, 332, 333, 334,
	335, 0, 213, 0, 27, 0, 0, 0, 0, 0,
	0, 209, 0, 388, 0, 353, 0, 354, 355, 356,
	357, 358, 359, 360, 0, 213, 0, 0, 0, 417,
	419, 420, 425, 30, 209, 0, 406, 0, 0, 0,
	212, 438, 0, 0, -2, 0, 257, 267, 446, 0,
	396, 0, 260, 491, 492, 413, 0, 450, 451, 452,
	0, 0, 0, 47, 53, 0, 59, 60, 0, 0,
	0, 0, 0, 143, 144, 114, 112, 0, 109, 108,
	65, 0, 124, 124, 86, 87, 127, 0, 127, 127,
	127, 0, 80, 81, 82, 74, 0, 75, 76, 77,
	0, 78, 464, 0, 656, 477, 0, 474, 0, 472,
	0, 467, 468, 469, 470, 471, 473, 475, 476, 0,
	157, 179, 656, 192, 181, 182, 183, 656, 0, 188,
	0, 444, 656, 0, 270, 271, 273, 290, 0, 292,
	294, 423, 424, 280, 281, 305, 306, 307, 0, 0,
	0, 0, 303, 285, 0, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 325, 326, 327, 330, 372, 373,
	0, 328, 329, 336, 0, 0, 214, 215, 217, 221,
	0, 397, 0, -2, 308, 27, 0, 0, 0, 0,
	0, 0, 394, 391, 0, 0, 362, 0, 0, 0,
	0, 416, 24, 0, 459, 460, 407, 408, 226, 31,
	0, 438, 428, 440, 442, 0, 27, 0, 434, 413,
	0, 0, 0, 421, 268, 128, 0, 0, 51, 0,
	0, 0, 138, 0, 140, 141, 0, 120, 0, 113,
	62, 110, 0, 127, 127, 88, 0, 89, 90, 91,
	0, 98, 0, 0, 657, 148, 0, 656, 480, 481,
	0, 0, 0, 0, 0, 160, 180, 186, 190, 310,
	174, 427, 291, 293, 295, 282, 303, 286, 0, 283,
	0, 0, 277, 341, 0, 0, 218, 222, 0, 224,
	225, 0, 213, 0, -2, 344, 345, 0, 0, 0,
	0, 413, 0, 392, 0, 0, 352, 363, 364, 365,
	366, 25, 267, 0, 0, 32, 0, 443, -2, 0,
	0, 0, 421, 447, 448, 397, 36, 0, 657, 55,
	0, 0, 50, 0, 145, 100, 139, 142, 122, 0,
	115, 116, 117, 118, 119, 101, 84, 85, 125, 126,
	97, 0, 0, 105, 0, 45, 658, 659, 149, 150,
	151, 0, 153, 154, 155, 284, 0, 304, 287, 342,
	216, 223, 219, 0, 0, 398, 0, 100, 100, 377,
	100, 104, 380, 100, 382, 100, 385, 0, 0, 0,
	389, 351, 395, 0, 409, 227, 228, 230, 231, 232,
	240, 0, 242, 0, 441, 0, -2, 0, 436, 435,
	35, 657, 43, 48, 56, 57, 0, 54, 136, 0,
	147, 129, 123, 0, 99, 0, 0, 0, 288, 0,
	343, 346, 374, 124, 378, 379, 381, 383, 384, 386,
	348, 347, 0, 0, 0, 393, 411, 0, 0, 0,
	0, 0, 247, 0, 0, 250, 0, 0, 0, 0,
	241, 0, 0, 261, 243, 0, 245, 246, 0, 431,
	27, 0, 42, 0, 0, 146, 134, 0, 131, 133,
	121, 103, 106, 152, 220, 375, 376, 367, 350, 390,
	26, 0, 0, 229, 236, 0, 239, 248, 249, 251,
	0, 253, 0, 255, 256, 233, 234, 235, 0, 0,
	0, 244, 439, -2, 437, 52, 0, 61, 0, 130,
	132, 0, 0, 0, 412, 410, 0, 0, 252, 254,
	0, 0, 0, 137, 135, 349, 0, 0, 0, 237,
	238, 0, 0, 0, 368, 0, 371, 0, 265, 0,
	0, 369, 262, 0, 263, 264, 0, 266, 0, 370,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 75, 3, 3, 3, 102, 94, 3,
	55, 57, 99, 97, 56, 98, 110, 100, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 238,
	83, 82, 84, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 104, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 93, 3, 105,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	76, 77, 78, 79, 80, 81, 85, 86, 87, 88,
	89, 90, 91, 92, 95, 96, 101, 103, 106, 107,
	108, 109, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:280
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:285
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:286
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:290
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 23:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:314
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 24:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:322
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 25:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:326
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 26:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line sql.y:333
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:339
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:343
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:349
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:353
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:360
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[5].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.OnDup = OnDup(yyDollar[6].updateExprs)
			yyVAL.statement = ins
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:371
		{
			cols := make(Columns, 0, len(yyDollar[6].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[7].updateExprs))
			for _, updateList := range yyDollar[6].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[7].updateExprs)}
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:383
		{
			yyVAL.str = InsertStr
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:387
		{
			yyVAL.str = ReplaceStr
		}
	case 35:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:393
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Table: yyDollar[3].tableName, Exprs: yyDollar[5].updateExprs, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 36:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:399
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Table: yyDollar[4].tableName, Where: NewWhere(WhereStr, yyDollar[5].expr), OrderBy: yyDollar[6].orderBy, Limit: yyDollar[7].limit}
		}
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:405
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 38:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:409
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:415
		{
			yyVAL.str = SessionStr
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:419
		{
			yyVAL.str = GlobalStr
		}
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:426
		{
			yyDollar[1].ddl.Action = CreateTableStr
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 42:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:432
		{
			yyDollar[1].ddl.Action = CreateTableStr
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].ddl.PartitionName = string(yyDollar[7].bytes)
			yyDollar[1].ddl.TableSpec.Options.Type = PartitionTableType
			yyVAL.statement = yyDollar[1].ddl
		}
	case 43:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:440
		{
			yyDollar[1].ddl.Action = CreateTableStr
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].ddl.BackendName = string(yyDollar[6].bytes)
			yyDollar[1].ddl.TableSpec.Options.Type = SingleTableType
			yyVAL.statement = yyDollar[1].ddl
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:448
		{
			var ifnotexists bool
			if yyDollar[3].byt != 0 {
				ifnotexists = true
			}
			yyVAL.statement = &DDL{Action: CreateDBStr, IfNotExists: ifnotexists, Database: yyDollar[4].tableIdent}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:456
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: CreateIndexStr, IndexName: string(yyDollar[4].bytes), Table: yyDollar[6].tableName, NewName: yyDollar[6].tableName}
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:463
		{
			var ifnotexists bool
			if yyDollar[3].byt != 0 {
				ifnotexists = true
			}
			yyVAL.ddl = &DDL{Action: CreateTableStr, IfNotExists: ifnotexists, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:474
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].TableOptions
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:481
		{
			yyVAL.TableOptions.Engine = yyDollar[1].str
			yyVAL.TableOptions.Charset = yyDollar[3].str
			yyVAL.TableOptions.Type = yyDollar[4].str
		}
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:488
		{
			yyVAL.str = ""
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:492
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:497
		{
			yyVAL.str = ""
		}
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:501
		{
			yyVAL.str = string(yyDollar[4].bytes)
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:506
		{
			yyVAL.str = ""
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:510
		{
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:514
		{
			yyVAL.str = NormalTableType
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:518
		{
			yyVAL.str = GlobalTableType
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:522
		{
			yyVAL.str = SingleTableType
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:529
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:534
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:538
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 61:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:544
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].optVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:555
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:565
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].optVal
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:570
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:692
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:696
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:700
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:704
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:718
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:723
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:728
		{
			yyVAL.optVal = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:732
		{
			yyVAL.optVal = NewIntVal(yyDollar[2].bytes)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:737
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:741
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:749
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:753
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:759
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:767
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:771
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:776
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:780
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:786
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:790
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:794
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:799
		{
			yyVAL.optVal = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:803
		{
			yyVAL.optVal = NewStrVal(yyDollar[2].bytes)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:807
		{
			yyVAL.optVal = NewIntVal(yyDollar[2].bytes)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:811
		{
			yyVAL.optVal = NewFloatVal(yyDollar[2].bytes)
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:815
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:819
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:824
		{
			yyVAL.optVal = nil
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:828
		{
			yyVAL.optVal = NewValArg(yyDollar[3].bytes)
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:833
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:837
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:842
		{
			yyVAL.str = ""
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:846
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:850
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:855
		{
			yyVAL.str = ""
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:859
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:864
		{
			yyVAL.colKeyOpt = ColKeyNone
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:868
		{
			yyVAL.colKeyOpt = ColKeyPrimary
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:872
		{
			yyVAL.colKeyOpt = ColKey
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:876
		{
			yyVAL.colKeyOpt = ColKeyUniqueKey
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:880
		{
			yyVAL.colKeyOpt = ColKeyUnique
		}
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:885
		{
			yyVAL.optVal = nil
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:889
		{
			yyVAL.optVal = NewStrVal(yyDollar[2].bytes)
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:895
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:899
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:905
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:909
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(string(yyDollar[3].bytes)), Primary: false, Unique: true}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:913
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: false, Unique: true}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:917
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: false, Unique: false}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:921
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(string(yyDollar[3].bytes)), Primary: false, Unique: false, Fulltext: true}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:928
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:932
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:938
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:942
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:948
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].optVal}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:954
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:958
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, Table: yyDollar[4].tableName, NewName: yyDollar[7].tableName}
		}
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:963
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:968
		{
			yyVAL.statement = &DDL{Action: AlterEngineStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName, Engine: string(yyDollar[7].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:972
		{
			yyVAL.statement = &DDL{Action: AlterCharsetStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName, Charset: string(yyDollar[9].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:976
		{
			yyVAL.statement = &DDL{Action: AlterAddColumnStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName, TableSpec: yyDollar[7].TableSpec}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:980
		{
			yyVAL.statement = &DDL{Action: AlterDropColumnStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName, DropColumnName: string(yyDollar[7].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:984
		{
			yyVAL.statement = &DDL{Action: AlterModifyColumnStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName, ModifyColumnDef: yyDollar[7].columnDefinition}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:991
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropTableStr, Tables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:999
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: DropIndexStr, IndexName: string(yyDollar[3].bytes), Table: yyDollar[5].tableName, NewName: yyDollar[5].tableName}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1004
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropDBStr, Database: yyDollar[4].tableIdent, IfExists: exists}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1014
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1018
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1024
		{
			yyVAL.statement = &DDL{Action: TruncateTableStr, Table: yyDollar[3].tableName, NewName: yyDollar[3].tableName}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1030
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName, NewName: yyDollar[3].tableName}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1036
		{
			yyVAL.statement = &Xa{}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1042
		{
			yyVAL.statement = &Explain{}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1048
		{
			yyVAL.statement = &Kill{QueryID: &NumVal{raw: string(yyDollar[2].bytes)}}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1052
		{
			yyVAL.statement = &Kill{QueryID: &NumVal{raw: string(yyDollar[3].bytes)}}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1058
		{
			yyVAL.statement = &Transaction{Action: BeginTxnStr}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1062
		{
			yyVAL.statement = &Transaction{Action: StartTxnStr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1066
		{
			yyVAL.statement = &Transaction{Action: RollbackTxnStr}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1070
		{
			yyVAL.statement = &Transaction{Action: CommitTxnStr}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1076
		{
			yyVAL.statement = &Radon{Action: AttachStr, Row: yyDollar[3].valTuple}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1080
		{
			yyVAL.statement = &Radon{Action: DetachStr, Row: yyDollar[3].valTuple}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1084
		{
			yyVAL.statement = &Radon{Action: AttachListStr}
		}
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1088
		{
			yyVAL.statement = &Radon{Action: ReshardStr, Table: yyDollar[3].tableName, NewName: yyDollar[5].tableName}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1094
		{
			yyVAL.str = ShowUnsupportedStr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1098
		{
			switch v := string(yyDollar[1].bytes); v {
			case ShowDatabasesStr, ShowTablesStr, ShowEnginesStr, ShowVersionsStr, ShowProcesslistStr, ShowQueryzStr, ShowTxnzStr, ShowColumnsStr:
				yyVAL.str = v
			default:
				yyVAL.str = ShowUnsupportedStr
			}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1107
		{
			yyVAL.str = ShowUnsupportedStr
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1113
		{
			yyVAL.statement = &Show{Type: yyDollar[2].str}
		}
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1117
		{
			yyVAL.statement = &Show{Type: ShowTablesStr, Database: yyDollar[4].tableName}
		}
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1121
		{
			yyVAL.statement = &Show{Type: ShowFullTablesStr, Database: yyDollar[4].tableName, Where: NewWhere(WhereStr, yyDollar[5].expr)}
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1125
		{
			yyVAL.statement = &Show{Type: ShowColumnsStr, Table: yyDollar[4].tableName}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1129
		{
			yyVAL.statement = &Show{Type: ShowCreateTableStr, Table: yyDollar[4].tableName}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1133
		{
			yyVAL.statement = &Show{Type: ShowCreateDatabaseStr, Database: yyDollar[4].tableName}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1137
		{
			yyVAL.statement = &Show{Type: ShowWarningsStr}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1141
		{
			yyVAL.statement = &Show{Type: ShowVariablesStr}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1145
		{
			yyVAL.statement = &Show{Type: ShowBinlogEventsStr, From: yyDollar[4].str, Limit: yyDollar[5].limit}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1149
		{
			yyVAL.statement = &Show{Type: ShowStatusStr}
		}
	case 188:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1153
		{
			yyVAL.statement = &Show{Type: ShowTableStatusStr, Database: yyDollar[4].tableName}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1158
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1162
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1167
		{
			yyVAL.tableName = TableName{}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1171
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1177
		{
			yyVAL.statement = &Checksum{Table: yyDollar[3].tableName}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1183
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1189
		{
			yyVAL.statement = &OtherRead{}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1193
		{
			yyVAL.statement = &OtherRead{}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1197
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1201
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1206
		{
			setAllowComments(yylex, true)
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1210
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1216
		{
			yyVAL.bytes2 = nil
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1220
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1226
		{
			yyVAL.str = UnionStr
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1230
		{
			yyVAL.str = UnionAllStr
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1234
		{
			yyVAL.str = UnionDistinctStr
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1239
		{
			yyVAL.str = ""
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1243
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1247
		{
			yyVAL.str = SQLCacheStr
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1252
		{
			yyVAL.str = ""
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1256
		{
			yyVAL.str = DistinctStr
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1261
		{
			yyVAL.str = ""
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1265
		{
			yyVAL.str = StraightJoinHint
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1270
		{
			yyVAL.selectExprs = nil
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1274
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1280
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1284
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1290
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1294
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1298
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1302
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1307
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1311
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1315
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1322
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1327
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1331
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1337
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1341
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1351
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1355
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1359
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1365
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1378
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1382
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, On: yyDollar[5].expr}
		}
	case 238:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1386
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, On: yyDollar[5].expr}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1390
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1395
		{
			yyVAL.empty = struct{}{}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1397
		{
			yyVAL.empty = struct{}{}
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1400
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1404
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1408
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1415
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1421
		{
			yyVAL.str = JoinStr
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1425
		{
			yyVAL.str = JoinStr
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1429
		{
			yyVAL.str = JoinStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1433
		{
			yyVAL.str = StraightJoinStr
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1439
		{
			yyVAL.str = LeftJoinStr
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1443
		{
			yyVAL.str = LeftJoinStr
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1447
		{
			yyVAL.str = RightJoinStr
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1451
		{
			yyVAL.str = RightJoinStr
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1457
		{
			yyVAL.str = NaturalJoinStr
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1461
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1471
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1475
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1481
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1485
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 261:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1490
		{
			yyVAL.indexHints = nil
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1494
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].colIdents}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1498
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].colIdents}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1502
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].colIdents}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1508
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1512
		{
			yyVAL.colIdents = append(yyDollar[1].colIdents, yyDollar[3].colIdent)
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1517
		{
			yyVAL.expr = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1521
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1527
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1531
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1535
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1539
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1543
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1547
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1551
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1557
		{
			yyVAL.str = ""
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1561
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1567
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1571
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1577
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1581
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1585
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1589
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1593
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1597
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1601
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1605
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1609
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1613
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1619
		{
			yyVAL.str = IsNullStr
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1623
		{
			yyVAL.str = IsNotNullStr
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1627
		{
			yyVAL.str = IsTrueStr
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1631
		{
			yyVAL.str = IsNotTrueStr
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1635
		{
			yyVAL.str = IsFalseStr
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1639
		{
			yyVAL.str = IsNotFalseStr
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1645
		{
			yyVAL.str = EqualStr
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1649
		{
			yyVAL.str = LessThanStr
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1653
		{
			yyVAL.str = GreaterThanStr
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1657
		{
			yyVAL.str = LessEqualStr
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1661
		{
			yyVAL.str = GreaterEqualStr
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1665
		{
			yyVAL.str = NotEqualStr
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1669
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1674
		{
			yyVAL.expr = nil
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1678
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1684
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1688
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1692
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1698
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1704
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1708
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1714
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1718
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1722
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1726
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1730
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1734
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1738
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1742
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1746
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1750
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1754
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1758
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1762
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1766
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1770
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1774
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1778
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1782
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1786
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1790
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1794
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1798
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1806
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1820
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1824
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1828
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1846
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1850
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1854
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1864
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1872
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 347:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1876
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 348:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1880
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 349:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1884
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 350:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1888
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1892
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1896
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colIdent}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1910
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1914
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1918
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1923
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1928
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1933
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1938
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1952
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1960
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1964
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1970
		{
			yyVAL.str = ""
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1974
		{
			yyVAL.str = BooleanModeStr
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1978
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1982
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1986
		{
			yyVAL.str = QueryExpansionStr
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1992
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1996
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2002
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2006
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2010
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: string(yyDollar[3].bytes)}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2014
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2018
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2022
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2028
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2032
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2036
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2040
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2044
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2048
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2052
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2057
		{
			yyVAL.expr = nil
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2061
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2066
		{
			yyVAL.str = string("")
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2070
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2076
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2080
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2086
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2091
		{
			yyVAL.expr = nil
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2095
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2101
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2105
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2109
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2115
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2119
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2123
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2127
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2131
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2135
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2139
		{
			yyVAL.expr = &NullVal{}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2145
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2154
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2158
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2163
		{
			yyVAL.exprs = nil
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2167
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2172
		{
			yyVAL.expr = nil
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2176
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2181
		{
			yyVAL.orderBy = nil
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2185
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2191
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2195
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2201
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2206
		{
			yyVAL.str = AscScr
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2210
		{
			yyVAL.str = AscScr
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2214
		{
			yyVAL.str = DescScr
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2219
		{
			yyVAL.limit = nil
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2223
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2227
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2231
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2236
		{
			yyVAL.str = ""
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2240
		{
			yyVAL.str = ForUpdateStr
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2244
		{
			yyVAL.str = ShareModeStr
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2257
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2261
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2265
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2270
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2274
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2278
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2285
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2289
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2293
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2297
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2302
		{
			yyVAL.updateExprs = nil
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2306
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2312
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2316
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2322
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2326
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2332
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2338
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2348
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2352
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2358
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2364
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2368
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2374
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2378
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2385
		{
			yyVAL.bytes = []byte("charset")
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2392
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2396
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2400
		{
			yyVAL.expr = &Default{}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2410
		{
			yyVAL.byt = 0
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2412
		{
			yyVAL.byt = 1
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2415
		{
			yyVAL.byt = 0
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2417
		{
			yyVAL.byt = 1
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2420
		{
			yyVAL.str = ""
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2422
		{
			yyVAL.str = IgnoreStr
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2426
		{
			yyVAL.empty = struct{}{}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2428
		{
			yyVAL.empty = struct{}{}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2430
		{
			yyVAL.empty = struct{}{}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2432
		{
			yyVAL.empty = struct{}{}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2434
		{
			yyVAL.empty = struct{}{}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2436
		{
			yyVAL.empty = struct{}{}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2438
		{
			yyVAL.empty = struct{}{}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2440
		{
			yyVAL.empty = struct{}{}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2442
		{
			yyVAL.empty = struct{}{}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2444
		{
			yyVAL.empty = struct{}{}
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2447
		{
			yyVAL.empty = struct{}{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2449
		{
			yyVAL.empty = struct{}{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2451
		{
			yyVAL.empty = struct{}{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2455
		{
			yyVAL.empty = struct{}{}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2457
		{
			yyVAL.empty = struct{}{}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2460
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2462
		{
			yyVAL.empty = struct{}{}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2464
		{
			yyVAL.empty = struct{}{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2468
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2472
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2479
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2485
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2489
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2496
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2683
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2692
		{
			decNesting(yylex)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2697
		{
			forceEOF(yylex)
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2702
		{
			forceEOF(yylex)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2706
		{
			forceEOF(yylex)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2710
		{
			forceEOF(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
